<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Krzysztof Żuraw - python</title><link>https://krzysztofzuraw.com/</link><description>Personal site</description><lastBuildDate>Sun, 01 Oct 2017 10:00:00 +0200</lastBuildDate><item><title>Debugging python code with wdb</title><link>https://krzysztofzuraw.com/blog/2017/debugging-python-code-with-wdb.html</link><description>&lt;p&gt;&lt;strong&gt;While I was on PyConPL conference last year I heard about interesting debugger called wdb. Since then
I don't have much chance to find out how it is to work with the tool. Yet I decided to write a quick blog
post about it. Let's get started!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;What exactly is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sun, 01 Oct 2017 10:00:00 +0200</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2017-10-01:/blog/2017/debugging-python-code-with-wdb.html</guid><category>python</category><category>debugging</category><category>wdb</category></item><item><title>Python imports validation</title><link>https://krzysztofzuraw.com/blog/2017/python-imports-validation.html</link><description>&lt;p&gt;&lt;strong&gt;Recently a colleague from work presented to me a nice pattern. I immediately decided to write about it. This blog post is all about this pattern!
Let's get started!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This pattern is useful when working with python modules. When you import module code inside this file gets executed. All of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sun, 24 Sep 2017 10:00:00 +0200</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2017-09-24:/blog/2017/python-imports-validation.html</guid><category>python</category><category>import</category><category>validation</category><category>modules</category></item><item><title>Moving to Relay in Django backend</title><link>https://krzysztofzuraw.com/blog/2017/moving-to-relay-in-django-backend.html</link><description>&lt;p&gt;&lt;strong&gt;Today I want to talk a little bit more about my next step in developing
a GraphQL application. This step is connected with moving backend so it understands
Relay.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="section" id="what-exactly-is-realy"&gt;
&lt;h2&gt;What exactly is Realy?&lt;/h2&gt;
&lt;p&gt;As documentation of &lt;a class="reference external" href="https://facebook.github.io/relay/"&gt;Relay&lt;/a&gt; suggests - it's framework
for working with external data in React. What does it …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sun, 03 Sep 2017 10:00:00 +0200</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2017-09-03:/blog/2017/moving-to-relay-in-django-backend.html</guid><category>django</category><category>python</category><category>relay</category></item><item><title>Monorepo structure for Django &amp; React Applications</title><link>https://krzysztofzuraw.com/blog/2017/monorepo-structure.html</link><description>&lt;p&gt;&lt;strong&gt;Hello! Today I will guide you through setting up React application with Django! Let's get started!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First thing is where I place my javascript application? Should it be in another repository? Or maybe Django should
use webpack to render js?&lt;/p&gt;
&lt;p&gt;I decided to use pattern called &lt;tt class="docutils literal"&gt;monorepo&lt;/tt&gt;. What does it …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sun, 20 Aug 2017 10:00:00 +0200</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2017-08-20:/blog/2017/monorepo-structure.html</guid><category>django</category><category>python</category><category>javascript</category><category>react</category></item><item><title>Django, GraphQL &amp; React - part two</title><link>https://krzysztofzuraw.com/blog/2017/django-graphql-react-part-two.html</link><description>&lt;p&gt;&lt;strong&gt;In this post, I will guide you through setting up GraphQL with Django.
Let's get started!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I will use a library called &lt;a class="reference external" href="https://github.com/graphql-python/graphene-django"&gt;graphene-django&lt;/a&gt;.
It will help a lot and allow me to get the job done instead of writing boilerplate code.&lt;/p&gt;
&lt;p&gt;I decided I will have 3 django applications: actors …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sun, 30 Jul 2017 10:00:00 +0200</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2017-07-30:/blog/2017/django-graphql-react-part-two.html</guid><category>django</category><category>python</category><category>graphql</category></item><item><title>Lessons learned from being a mentor</title><link>https://krzysztofzuraw.com/blog/2017/lessons-learned-from-being-a-mentor.html</link><description>&lt;p&gt;&lt;strong&gt;Last week I was a mentor in two day Python workshop. The main goal of this event was to
show people who didn't have any prior experience with programming that coding can be fun.
Text below is note to myself that I took from conducting such workshop.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title first"&gt;Table of Contents …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sat, 15 Jul 2017 08:00:00 +0200</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2017-07-15:/blog/2017/lessons-learned-from-being-a-mentor.html</guid><category>python</category><category>mentoring</category><category>workshop</category><category>geekgirlscarrots</category></item><item><title>Django, GraphQL &amp; React - part one</title><link>https://krzysztofzuraw.com/blog/2017/django-graphql-react-part-one.html</link><description>&lt;p&gt;&lt;strong&gt;Hello! Welcome back after a little break - I recently started working on a project
that uses GraphQL. Thant's why I thought that it will be the best to show you how
to build a simple application using these tools. Let's get started!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First, comes this idea - what application can I …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sun, 02 Jul 2017 10:00:00 +0200</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2017-07-02:/blog/2017/django-graphql-react-part-one.html</guid><category>django</category><category>python</category></item><item><title>Building python packages for debian</title><link>https://krzysztofzuraw.com/blog/2017/building-python-packages-for-debian.html</link><description>&lt;p&gt;&lt;strong&gt;There are many ways how to build &amp;amp; distribute python packages: pypi, devpi.
But if you happen to use debian based OSes you can build python packages as
debian native ones. This blog post is all about it - let's go!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Let's say you have following structure of your project:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;├── Makefile
├── MANIFEST …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sun, 04 Jun 2017 10:00:00 +0200</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2017-06-04:/blog/2017/building-python-packages-for-debian.html</guid><category>python</category><category>debian</category><category>ubuntu</category><category>packages</category><category>building</category><category>docker</category></item><item><title>Django and nginx file proxy - part two</title><link>https://krzysztofzuraw.com/blog/2017/django-nginx-file-proxy-part-two.html</link><description>&lt;p&gt;&lt;strong&gt;You have our application up and running but there is a problem. You don't want
the user to see that your media files are served from media url. How to fix that?
This blog post will tell you one of the solutions. Let's go!&lt;/strong&gt;&lt;/p&gt;
&lt;div class="section" id="how-to-hide-urls-from-the-user"&gt;
&lt;h2&gt;How to hide urls from the …&lt;/h2&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sun, 21 May 2017 10:00:00 +0200</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2017-05-21:/blog/2017/django-nginx-file-proxy-part-two.html</guid><category>django</category><category>nginx</category><category>python</category><category>proxy</category></item><item><title>Django and nginx file proxy - part one</title><link>https://krzysztofzuraw.com/blog/2017/django-nginx-file-proxy-part-one.html</link><description>&lt;p&gt;&lt;strong&gt;In this blog post series, I will show you how to use Nginx for hiding download
urls. Django will serve us as a backend. Let's go!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In this series I will build simple web application - user upload a file via api
and then she/he wants to download it. But …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sun, 14 May 2017 10:00:00 +0200</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2017-05-14:/blog/2017/django-nginx-file-proxy-part-one.html</guid><category>django</category><category>nginx</category><category>python</category><category>proxy</category></item><item><title>Testing django template tags</title><link>https://krzysztofzuraw.com/blog/2017/how-to-test-django-template-tags.html</link><description>&lt;p&gt;&lt;strong&gt;In this blog post I will give you simple example how to test your template tags
in django using django testing tools. Let's get started!&lt;/strong&gt;&lt;/p&gt;
&lt;div class="section" id="how-to-test-templatetags"&gt;
&lt;h2&gt;How to test templatetags?&lt;/h2&gt;
&lt;p&gt;Let say that you got this template tag under &lt;tt class="docutils literal"&gt;/templatetags/create_header.py&lt;/tt&gt; in django:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;

&lt;span class="n"&gt;register&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Library …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sun, 23 Apr 2017 10:00:00 +0200</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2017-04-23:/blog/2017/how-to-test-django-template-tags.html</guid><category>testing</category><category>django</category><category>python</category><category>templatetags</category></item><item><title>Gunicorn &amp; LRU cache pitfall</title><link>https://krzysztofzuraw.com/blog/2017/gunicorn-lru-cache-pitfall.html</link><description>&lt;p&gt;&lt;strong&gt;Today I want to write about some interesting situation connected with using
python LRU cache in an application that uses gunicorn.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title first"&gt;Table of Contents:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#what-is-lru-cache" id="id1"&gt;What is LRU cache?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#gunicorn-lru-pitfall" id="id2"&gt;Gunicorn &amp;amp; LRU pitfall&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-lru-cache"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id1"&gt;What is LRU cache?&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When you cache is starting to grow more and more you have to remove something …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sun, 05 Feb 2017 10:00:00 +0100</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2017-02-05:/blog/2017/gunicorn-lru-cache-pitfall.html</guid><category>python</category></item><item><title>Docker.py- python API for Docker</title><link>https://krzysztofzuraw.com/blog/2016/docker-py.html</link><description>&lt;p&gt;&lt;strong&gt;Once upon a time I and my friend decided to write an application that helps us
doing code kata. The first problem that we faced was how to run a code provided by
the user in a safe manner so our server won't be destroyed. After giving it some thought …&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sun, 27 Nov 2016 10:00:00 +0100</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2016-11-27:/blog/2016/docker-py.html</guid><category>python</category><category>docker</category></item><item><title>PyConPL 2016</title><link>https://krzysztofzuraw.com/blog/2016/pyconpl-2016.html</link><description>&lt;p&gt;&lt;strong&gt;This weekend I was on PyConPL conference. This is a short relation from this
event.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title first"&gt;Table of Contents:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#day-1" id="id1"&gt;Day 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#day-2" id="id2"&gt;Day 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#day-3" id="id3"&gt;Day 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#day-4" id="id4"&gt;Day 4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="day-1"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id1"&gt;Day 1&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I was on a presentation by Marcin Bardź &lt;em&gt;PostgreSQL i SQLAlchemy Duet (nie)doskonały&lt;/em&gt;. It was a talk
about the tandem of …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sun, 16 Oct 2016 10:00:00 +0200</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2016-10-16:/blog/2016/pyconpl-2016.html</guid><category>python</category><category>conference</category></item><item><title>Archives from memory- libarchive</title><link>https://krzysztofzuraw.com/blog/2016/archives-from-memory.html</link><description>&lt;p&gt;&lt;strong&gt;This blog post is about python wrapper around libarchive and how to use it to
generate archive from memory.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title first"&gt;Table of Contents:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#libarchive-python-libarchive-c" id="id1"&gt;Libarchive &amp;amp; python-libarchive-c&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#add-entry-from-memory" id="id2"&gt;Add entry from memory&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="libarchive-python-libarchive-c"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id1"&gt;Libarchive &amp;amp; python-libarchive-c&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you happen to learn more about how to create archives in various formats like
tar, iso or zip I …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sun, 25 Sep 2016 09:00:00 +0200</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2016-09-25:/blog/2016/archives-from-memory.html</guid><category>python</category></item><item><title>Python &amp; WebDAV- part two</title><link>https://krzysztofzuraw.com/blog/2016/python-webdav-part-two.html</link><description>&lt;p&gt;&lt;strong&gt;In the last post, I set up owncloud with WebDAV server. Now it's time to use it.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title first"&gt;Table of Contents:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#python-webdav-client-easywebdav" id="id1"&gt;Python WebDAV client - easywebdav&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#webdav-editor" id="id2"&gt;WebDAV editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#conclusion" id="id3"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="python-webdav-client-easywebdav"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id1"&gt;Python WebDAV client - easywebdav&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I was searching for good python library to work with WebDAV for a long time.
I finally found it- …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sun, 18 Sep 2016 10:00:00 +0200</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2016-09-18:/blog/2016/python-webdav-part-two.html</guid><category>python</category></item><item><title>Makefiles in python projects</title><link>https://krzysztofzuraw.com/blog/2016/makefiles-in-python-projects.html</link><description>&lt;p&gt;&lt;strong&gt;When I join my current company I saw in their git repos strange file. It wasn't
used by any python code. It just sits in the main directory of the project. I asked my
colleagues what is this file for? They told me- to make your life easier. That's
why …&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sat, 03 Sep 2016 10:00:00 +0200</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2016-09-03:/blog/2016/makefiles-in-python-projects.html</guid><category>python</category></item><item><title>Factory pattern in python</title><link>https://krzysztofzuraw.com/blog/2016/factory-pattern-python.html</link><description>&lt;p class="first last"&gt;Recently I discovered another design pattern that I found interesting. This blog post is all about this pattern.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sun, 07 Aug 2016 10:20:00 +0200</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2016-08-07:/blog/2016/factory-pattern-python.html</guid><category>python</category></item><item><title>Design by contract in python- part three</title><link>https://krzysztofzuraw.com/blog/2016/design-by-contract-in-python-part-three.html</link><description>&lt;p class="first last"&gt;Short description of libraries used to implement design by contract in python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sun, 31 Jul 2016 10:00:00 +0200</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2016-07-31:/blog/2016/design-by-contract-in-python-part-three.html</guid><category>python</category></item><item><title>Design by contract in python- part two</title><link>https://krzysztofzuraw.com/blog/2016/design-by-contract-in-python-part-two.html</link><description>&lt;p class="first last"&gt;Short description of libraries used to implement design by contract in python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sat, 23 Jul 2016 10:00:00 +0200</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2016-07-23:/blog/2016/design-by-contract-in-python-part-two.html</guid><category>python</category></item><item><title>Design by contract in python- part one</title><link>https://krzysztofzuraw.com/blog/2016/design-by-contract-in-python-part-one.html</link><description>&lt;p class="first last"&gt;Short description of libraries used to implement design by contract in python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sat, 16 Jul 2016 10:00:00 +0200</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2016-07-16:/blog/2016/design-by-contract-in-python-part-one.html</guid><category>python</category></item><item><title>Ports and Adapters in python - part one</title><link>https://krzysztofzuraw.com/blog/2016/ports-and-adapters-in-python-part-one.html</link><description>&lt;p class="first last"&gt;First part of series about Django application made using Ports and Adapters design pattern.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sun, 22 May 2016 10:20:00 +0200</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2016-05-22:/blog/2016/ports-and-adapters-in-python-part-one.html</guid><category>django</category><category>python</category><category>design_patterns</category></item><item><title>My first personal project</title><link>https://krzysztofzuraw.com/blog/2016/my-first-personal-project.html</link><description>&lt;p class="first last"&gt;My thoughts about personal project that I made.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sat, 14 May 2016 10:20:00 +0200</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2016-05-14:/blog/2016/my-first-personal-project.html</guid><category>python</category></item><item><title>Mocks and monkeypatching in python</title><link>https://krzysztofzuraw.com/blog/2016/mocks-monkeypatching-in-python.html</link><description>&lt;p class="first last"&gt;How to mocks function and classes in python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sun, 24 Apr 2016 10:20:00 +0200</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2016-04-24:/blog/2016/mocks-monkeypatching-in-python.html</guid><category>python</category><category>testing</category></item><item><title>My first workshop experience</title><link>https://krzysztofzuraw.com/blog/2016/my-first-workshop%20experience.html</link><description>&lt;p class="first last"&gt;How I conduct my first python workshop.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sun, 17 Apr 2016 10:20:00 +0200</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2016-04-17:/blog/2016/my-first-workshop experience.html</guid><category>python</category></item><item><title>Python class @decorators</title><link>https://krzysztofzuraw.com/blog/2016/python-class-decorators.html</link><description>&lt;p class="first last"&gt;Post about syntax sugar in python.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Fri, 29 Jan 2016 10:20:00 +0100</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2016-01-29:/blog/2016/python-class-decorators.html</guid><category>python</category></item><item><title>Python __slots__</title><link>https://krzysztofzuraw.com/blog/2016/python-slots.html</link><description>&lt;p class="first last"&gt;Quick glance at python __slots__.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sat, 23 Jan 2016 10:20:00 +0100</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2016-01-23:/blog/2016/python-slots.html</guid><category>python</category></item><item><title>Http and websockets logging handlers</title><link>https://krzysztofzuraw.com/blog/2016/http-websockets-logging-handlers.html</link><description>&lt;p class="first last"&gt;Quick introduction to HTTP and Websockets logging handlers.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krzysztof Żuraw</dc:creator><pubDate>Sat, 16 Jan 2016 10:20:00 +0100</pubDate><guid isPermaLink="false">tag:krzysztofzuraw.com,2016-01-16:/blog/2016/http-websockets-logging-handlers.html</guid><category>python</category><category>logging</category></item></channel></rss>